{"ast":null,"code":"var _jsxFileName = \"/Users/sanjaybhargav/Desktop/project/ExpressNest/Frontend/src/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Post.css'; // Make sure you have your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  postData,\n  onPostUpdated\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(postData.postText);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = async () => {\n    const updatedPost = {\n      userId: postData.userId,\n      postId: postData.postId,\n      postText: editText,\n      privacy: \"Public\"\n    };\n    try {\n      const response = await fetch(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedPost)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      setIsEditing(false);\n      onPostUpdated(); // Notify parent component to refresh posts\n    } catch (error) {\n      console.error('Failed to update post:', error);\n    }\n  };\n\n  // Inside your Post component\n  const handleDeleteClick = async () => {\n    try {\n      console.log(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`);\n      const response = await fetch(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`, {\n        method: 'DELETE'\n      });\n      console.log(response);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      onPostUpdated(); // Notify parent component to refresh posts after deletion\n    } catch (error) {\n      console.error('Failed to delete post:', error);\n    }\n  };\n  if (postData.deletedAt !== null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editText,\n        onChange: e => setEditText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveClick,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: postData.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"RurD2DOgF9SGeRlLaNhfCPNrIAg=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","postData","onPostUpdated","_s","isEditing","setIsEditing","editText","setEditText","postText","handleEditClick","handleSaveClick","updatedPost","userId","postId","privacy","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","error","console","handleDeleteClick","log","deletedAt","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sanjaybhargav/Desktop/project/ExpressNest/Frontend/src/Post.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Post.css'; // Make sure you have your CSS file for styling\n\nconst Post = ({ postData, onPostUpdated }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(postData.postText);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n\n  const handleSaveClick = async () => {\n    const updatedPost = {\n      userId: postData.userId,\n      postId: postData.postId,\n      postText: editText,\n      privacy: \"Public\"\n    };\n\n    try {\n      const response = await fetch(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedPost),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      setIsEditing(false);\n      onPostUpdated(); // Notify parent component to refresh posts\n    } catch (error) {\n      console.error('Failed to update post:', error);\n    }\n  };\n\n  // Inside your Post component\n  const handleDeleteClick = async () => {\n    try {\n        console.log(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`)\n      const response = await fetch(`http://a83ab0f0e6671462c87d9c3980002854-1490594495.us-west-2.elb.amazonaws.com/posts/${postData.postId}`, {\n        method: 'DELETE'\n      });\n      console.log(response)\n  \n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n  \n      onPostUpdated(); // Notify parent component to refresh posts after deletion\n    } catch (error) {\n      console.error('Failed to delete post:', error);\n    }\n  };\n\n  if (postData.deletedAt !== null) {\n    return null;\n  }\n\nreturn (\n    <div className=\"post\">\n      {isEditing ? (\n        <>\n          <textarea \n            value={editText} \n            onChange={(e) => setEditText(e.target.value)} \n          />\n          <button onClick={handleSaveClick}>Save</button>\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <p>{postData.postText}</p>\n          <button onClick={handleEditClick}>Edit</button>\n          <button onClick={handleDeleteClick}>Delete</button>\n        </>\n      )}\n    </div>\n  );\n  \n};\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}